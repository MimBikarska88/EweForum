// <auto-generated />
using System;
using EweForum.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EweForum.Infrastructure.Migrations
{
    [DbContext(typeof(EweForumContext))]
    [Migration("20240313120435_RenameDataset")]
    partial class RenameDataset
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Country", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = "AF",
                            Name = "Afghanistan"
                        },
                        new
                        {
                            Id = "AX",
                            Name = "Åland Islands"
                        },
                        new
                        {
                            Id = "AL",
                            Name = "Albania"
                        },
                        new
                        {
                            Id = "DZ",
                            Name = "Algeria"
                        },
                        new
                        {
                            Id = "AS",
                            Name = "American Samoa"
                        },
                        new
                        {
                            Id = "AD",
                            Name = "AndorrA"
                        },
                        new
                        {
                            Id = "AO",
                            Name = "Angola"
                        },
                        new
                        {
                            Id = "AI",
                            Name = "Anguilla"
                        },
                        new
                        {
                            Id = "AQ",
                            Name = "Antarctica"
                        },
                        new
                        {
                            Id = "AG",
                            Name = "Antigua and Barbuda"
                        },
                        new
                        {
                            Id = "AR",
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = "AM",
                            Name = "Armenia"
                        },
                        new
                        {
                            Id = "AW",
                            Name = "Aruba"
                        },
                        new
                        {
                            Id = "AU",
                            Name = "Australia"
                        },
                        new
                        {
                            Id = "AT",
                            Name = "Austria"
                        },
                        new
                        {
                            Id = "AZ",
                            Name = "Azerbaijan"
                        },
                        new
                        {
                            Id = "BS",
                            Name = "Bahamas"
                        },
                        new
                        {
                            Id = "BH",
                            Name = "Bahrain"
                        },
                        new
                        {
                            Id = "BD",
                            Name = "Bangladesh"
                        },
                        new
                        {
                            Id = "BB",
                            Name = "Barbados"
                        },
                        new
                        {
                            Id = "BY",
                            Name = "Belarus"
                        },
                        new
                        {
                            Id = "BE",
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = "BZ",
                            Name = "Belize"
                        },
                        new
                        {
                            Id = "BJ",
                            Name = "Benin"
                        },
                        new
                        {
                            Id = "BM",
                            Name = "Bermuda"
                        },
                        new
                        {
                            Id = "BT",
                            Name = "Bhutan"
                        },
                        new
                        {
                            Id = "BO",
                            Name = "Bolivia"
                        },
                        new
                        {
                            Id = "BA",
                            Name = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = "BW",
                            Name = "Botswana"
                        },
                        new
                        {
                            Id = "BV",
                            Name = "Bouvet Island"
                        },
                        new
                        {
                            Id = "BR",
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = "IO",
                            Name = "British Indian Ocean Territory"
                        },
                        new
                        {
                            Id = "BN",
                            Name = "Brunei Darussalam"
                        },
                        new
                        {
                            Id = "BG",
                            Name = "Bulgaria"
                        },
                        new
                        {
                            Id = "BF",
                            Name = "Burkina Faso"
                        },
                        new
                        {
                            Id = "BI",
                            Name = "Burundi"
                        },
                        new
                        {
                            Id = "KH",
                            Name = "Cambodia"
                        },
                        new
                        {
                            Id = "CM",
                            Name = "Cameroon"
                        },
                        new
                        {
                            Id = "CA",
                            Name = "Canada"
                        },
                        new
                        {
                            Id = "CV",
                            Name = "Cape Verde"
                        },
                        new
                        {
                            Id = "KY",
                            Name = "Cayman Islands"
                        },
                        new
                        {
                            Id = "CF",
                            Name = "Central African Republic"
                        },
                        new
                        {
                            Id = "TD",
                            Name = "Chad"
                        },
                        new
                        {
                            Id = "CL",
                            Name = "Chile"
                        },
                        new
                        {
                            Id = "CN",
                            Name = "China"
                        },
                        new
                        {
                            Id = "CX",
                            Name = "Christmas Island"
                        },
                        new
                        {
                            Id = "CC",
                            Name = "Cocos (Keeling) Islands"
                        },
                        new
                        {
                            Id = "CO",
                            Name = "Colombia"
                        },
                        new
                        {
                            Id = "KM",
                            Name = "Comoros"
                        },
                        new
                        {
                            Id = "CG",
                            Name = "Congo"
                        },
                        new
                        {
                            Id = "CD",
                            Name = "Congo, The Democratic Republic of the"
                        },
                        new
                        {
                            Id = "CK",
                            Name = "Cook Islands"
                        },
                        new
                        {
                            Id = "CR",
                            Name = "Costa Rica"
                        },
                        new
                        {
                            Id = "CI",
                            Name = "Cote D'Ivoire"
                        },
                        new
                        {
                            Id = "HR",
                            Name = "Croatia"
                        },
                        new
                        {
                            Id = "CU",
                            Name = "Cuba"
                        },
                        new
                        {
                            Id = "CY",
                            Name = "Cyprus"
                        },
                        new
                        {
                            Id = "CZ",
                            Name = "Czech Republic"
                        },
                        new
                        {
                            Id = "DK",
                            Name = "Denmark"
                        },
                        new
                        {
                            Id = "DJ",
                            Name = "Djibouti"
                        },
                        new
                        {
                            Id = "DM",
                            Name = "Dominica"
                        },
                        new
                        {
                            Id = "DO",
                            Name = "Dominican Republic"
                        },
                        new
                        {
                            Id = "EC",
                            Name = "Ecuador"
                        },
                        new
                        {
                            Id = "EG",
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = "SV",
                            Name = "El Salvador"
                        },
                        new
                        {
                            Id = "GQ",
                            Name = "Equatorial Guinea"
                        },
                        new
                        {
                            Id = "ER",
                            Name = "Eritrea"
                        },
                        new
                        {
                            Id = "EE",
                            Name = "Estonia"
                        },
                        new
                        {
                            Id = "ET",
                            Name = "Ethiopia"
                        },
                        new
                        {
                            Id = "FK",
                            Name = "Falkland Islands (Malvinas)"
                        },
                        new
                        {
                            Id = "FO",
                            Name = "Faroe Islands"
                        },
                        new
                        {
                            Id = "FJ",
                            Name = "Fiji"
                        },
                        new
                        {
                            Id = "FI",
                            Name = "Finland"
                        },
                        new
                        {
                            Id = "FR",
                            Name = "France"
                        },
                        new
                        {
                            Id = "GF",
                            Name = "French Guiana"
                        },
                        new
                        {
                            Id = "PF",
                            Name = "French Polynesia"
                        },
                        new
                        {
                            Id = "TF",
                            Name = "French Southern Territories"
                        },
                        new
                        {
                            Id = "GA",
                            Name = "Gabon"
                        },
                        new
                        {
                            Id = "GM",
                            Name = "Gambia"
                        },
                        new
                        {
                            Id = "GE",
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = "DE",
                            Name = "Germany"
                        },
                        new
                        {
                            Id = "GH",
                            Name = "Ghana"
                        },
                        new
                        {
                            Id = "GI",
                            Name = "Gibraltar"
                        },
                        new
                        {
                            Id = "GR",
                            Name = "Greece"
                        },
                        new
                        {
                            Id = "GL",
                            Name = "Greenland"
                        },
                        new
                        {
                            Id = "GD",
                            Name = "Grenada"
                        },
                        new
                        {
                            Id = "GP",
                            Name = "Guadeloupe"
                        },
                        new
                        {
                            Id = "GU",
                            Name = "Guam"
                        },
                        new
                        {
                            Id = "GT",
                            Name = "Guatemala"
                        },
                        new
                        {
                            Id = "GG",
                            Name = "Guernsey"
                        },
                        new
                        {
                            Id = "GN",
                            Name = "Guinea"
                        },
                        new
                        {
                            Id = "GW",
                            Name = "Guinea-Bissau"
                        },
                        new
                        {
                            Id = "GY",
                            Name = "Guyana"
                        },
                        new
                        {
                            Id = "HT",
                            Name = "Haiti"
                        },
                        new
                        {
                            Id = "HM",
                            Name = "Heard Island and Mcdonald Islands"
                        },
                        new
                        {
                            Id = "VA",
                            Name = "Holy See (Vatican City State)"
                        },
                        new
                        {
                            Id = "HN",
                            Name = "Honduras"
                        },
                        new
                        {
                            Id = "HK",
                            Name = "Hong Kong"
                        },
                        new
                        {
                            Id = "HU",
                            Name = "Hungary"
                        },
                        new
                        {
                            Id = "IS",
                            Name = "Iceland"
                        },
                        new
                        {
                            Id = "IN",
                            Name = "India"
                        },
                        new
                        {
                            Id = "ID",
                            Name = "Indonesia"
                        },
                        new
                        {
                            Id = "IR",
                            Name = "Iran, Islamic Republic Of"
                        },
                        new
                        {
                            Id = "IQ",
                            Name = "Iraq"
                        },
                        new
                        {
                            Id = "IE",
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = "IM",
                            Name = "Isle of Man"
                        },
                        new
                        {
                            Id = "IL",
                            Name = "Israel"
                        },
                        new
                        {
                            Id = "IT",
                            Name = "Italy"
                        },
                        new
                        {
                            Id = "JM",
                            Name = "Jamaica"
                        },
                        new
                        {
                            Id = "JP",
                            Name = "Japan"
                        },
                        new
                        {
                            Id = "JE",
                            Name = "Jersey"
                        },
                        new
                        {
                            Id = "JO",
                            Name = "Jordan"
                        },
                        new
                        {
                            Id = "KZ",
                            Name = "Kazakhstan"
                        },
                        new
                        {
                            Id = "KE",
                            Name = "Kenya"
                        },
                        new
                        {
                            Id = "KI",
                            Name = "Kiribati"
                        },
                        new
                        {
                            Id = "KP",
                            Name = "Korea, Democratic People'S Republic of"
                        },
                        new
                        {
                            Id = "KR",
                            Name = "Korea, Republic of"
                        },
                        new
                        {
                            Id = "KW",
                            Name = "Kuwait"
                        },
                        new
                        {
                            Id = "KG",
                            Name = "Kyrgyzstan"
                        },
                        new
                        {
                            Id = "LA",
                            Name = "Lao People'S Democratic Republic"
                        },
                        new
                        {
                            Id = "LV",
                            Name = "Latvia"
                        },
                        new
                        {
                            Id = "LB",
                            Name = "Lebanon"
                        },
                        new
                        {
                            Id = "LS",
                            Name = "Lesotho"
                        },
                        new
                        {
                            Id = "LR",
                            Name = "Liberia"
                        },
                        new
                        {
                            Id = "LY",
                            Name = "Libyan Arab Jamahiriya"
                        },
                        new
                        {
                            Id = "LI",
                            Name = "Liechtenstein"
                        },
                        new
                        {
                            Id = "LT",
                            Name = "Lithuania"
                        },
                        new
                        {
                            Id = "LU",
                            Name = "Luxembourg"
                        },
                        new
                        {
                            Id = "MO",
                            Name = "Macao"
                        },
                        new
                        {
                            Id = "MK",
                            Name = "Macedonia, The Former Yugoslav Republic of"
                        },
                        new
                        {
                            Id = "MG",
                            Name = "Madagascar"
                        },
                        new
                        {
                            Id = "MW",
                            Name = "Malawi"
                        },
                        new
                        {
                            Id = "MY",
                            Name = "Malaysia"
                        },
                        new
                        {
                            Id = "MV",
                            Name = "Maldives"
                        },
                        new
                        {
                            Id = "ML",
                            Name = "Mali"
                        },
                        new
                        {
                            Id = "MT",
                            Name = "Malta"
                        },
                        new
                        {
                            Id = "MH",
                            Name = "Marshall Islands"
                        },
                        new
                        {
                            Id = "MQ",
                            Name = "Martinique"
                        },
                        new
                        {
                            Id = "MR",
                            Name = "Mauritania"
                        },
                        new
                        {
                            Id = "MU",
                            Name = "Mauritius"
                        },
                        new
                        {
                            Id = "YT",
                            Name = "Mayotte"
                        },
                        new
                        {
                            Id = "MX",
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = "FM",
                            Name = "Micronesia, Federated States of"
                        },
                        new
                        {
                            Id = "MD",
                            Name = "Moldova, Republic of"
                        },
                        new
                        {
                            Id = "MC",
                            Name = "Monaco"
                        },
                        new
                        {
                            Id = "MN",
                            Name = "Mongolia"
                        },
                        new
                        {
                            Id = "MS",
                            Name = "Montserrat"
                        },
                        new
                        {
                            Id = "MA",
                            Name = "Morocco"
                        },
                        new
                        {
                            Id = "MZ",
                            Name = "Mozambique"
                        },
                        new
                        {
                            Id = "MM",
                            Name = "Myanmar"
                        },
                        new
                        {
                            Id = "NA",
                            Name = "Namibia"
                        },
                        new
                        {
                            Id = "NR",
                            Name = "Nauru"
                        },
                        new
                        {
                            Id = "NP",
                            Name = "Nepal"
                        },
                        new
                        {
                            Id = "NL",
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = "AN",
                            Name = "Netherlands Antilles"
                        },
                        new
                        {
                            Id = "NC",
                            Name = "New Caledonia"
                        },
                        new
                        {
                            Id = "NZ",
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = "NI",
                            Name = "Nicaragua"
                        },
                        new
                        {
                            Id = "NE",
                            Name = "Niger"
                        },
                        new
                        {
                            Id = "NG",
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = "NU",
                            Name = "Niue"
                        },
                        new
                        {
                            Id = "NF",
                            Name = "Norfolk Island"
                        },
                        new
                        {
                            Id = "MP",
                            Name = "Northern Mariana Islands"
                        },
                        new
                        {
                            Id = "NO",
                            Name = "Norway"
                        },
                        new
                        {
                            Id = "OM",
                            Name = "Oman"
                        },
                        new
                        {
                            Id = "PK",
                            Name = "Pakistan"
                        },
                        new
                        {
                            Id = "PW",
                            Name = "Palau"
                        },
                        new
                        {
                            Id = "PS",
                            Name = "Palestinian Territory, Occupied"
                        },
                        new
                        {
                            Id = "PA",
                            Name = "Panama"
                        },
                        new
                        {
                            Id = "PG",
                            Name = "Papua New Guinea"
                        },
                        new
                        {
                            Id = "PY",
                            Name = "Paraguay"
                        },
                        new
                        {
                            Id = "PE",
                            Name = "Peru"
                        },
                        new
                        {
                            Id = "PH",
                            Name = "Philippines"
                        },
                        new
                        {
                            Id = "PN",
                            Name = "Pitcairn"
                        },
                        new
                        {
                            Id = "PL",
                            Name = "Poland"
                        },
                        new
                        {
                            Id = "PT",
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = "PR",
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Id = "QA",
                            Name = "Qatar"
                        },
                        new
                        {
                            Id = "RE",
                            Name = "Reunion"
                        },
                        new
                        {
                            Id = "RO",
                            Name = "Romania"
                        },
                        new
                        {
                            Id = "RU",
                            Name = "Russian Federation"
                        },
                        new
                        {
                            Id = "RW",
                            Name = "RWANDA"
                        },
                        new
                        {
                            Id = "SH",
                            Name = "Saint Helena"
                        },
                        new
                        {
                            Id = "KN",
                            Name = "Saint Kitts and Nevis"
                        },
                        new
                        {
                            Id = "LC",
                            Name = "Saint Lucia"
                        },
                        new
                        {
                            Id = "PM",
                            Name = "Saint Pierre and Miquelon"
                        },
                        new
                        {
                            Id = "VC",
                            Name = "Saint Vincent and the Grenadines"
                        },
                        new
                        {
                            Id = "WS",
                            Name = "Samoa"
                        },
                        new
                        {
                            Id = "SM",
                            Name = "San Marino"
                        },
                        new
                        {
                            Id = "ST",
                            Name = "Sao Tome and Principe"
                        },
                        new
                        {
                            Id = "SA",
                            Name = "Saudi Arabia"
                        },
                        new
                        {
                            Id = "SN",
                            Name = "Senegal"
                        },
                        new
                        {
                            Id = "CS",
                            Name = "Serbia and Montenegro"
                        },
                        new
                        {
                            Id = "SC",
                            Name = "Seychelles"
                        },
                        new
                        {
                            Id = "SL",
                            Name = "Sierra Leone"
                        },
                        new
                        {
                            Id = "SG",
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = "SK",
                            Name = "Slovakia"
                        },
                        new
                        {
                            Id = "SI",
                            Name = "Slovenia"
                        },
                        new
                        {
                            Id = "SB",
                            Name = "Solomon Islands"
                        },
                        new
                        {
                            Id = "SO",
                            Name = "Somalia"
                        },
                        new
                        {
                            Id = "ZA",
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = "GS",
                            Name = "South Georgia and the South Sandwich Islands"
                        },
                        new
                        {
                            Id = "ES",
                            Name = "Spain"
                        },
                        new
                        {
                            Id = "LK",
                            Name = "Sri Lanka"
                        },
                        new
                        {
                            Id = "SD",
                            Name = "Sudan"
                        },
                        new
                        {
                            Id = "SR",
                            Name = "Suriname"
                        },
                        new
                        {
                            Id = "SJ",
                            Name = "Svalbard and Jan Mayen"
                        },
                        new
                        {
                            Id = "SZ",
                            Name = "Swaziland"
                        },
                        new
                        {
                            Id = "SE",
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = "CH",
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = "SY",
                            Name = "Syrian Arab Republic"
                        },
                        new
                        {
                            Id = "TW",
                            Name = "Taiwan, Province of China"
                        },
                        new
                        {
                            Id = "TJ",
                            Name = "Tajikistan"
                        },
                        new
                        {
                            Id = "TZ",
                            Name = "Tanzania, United Republic of"
                        },
                        new
                        {
                            Id = "TH",
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = "TL",
                            Name = "Timor-Leste"
                        },
                        new
                        {
                            Id = "TG",
                            Name = "Togo"
                        },
                        new
                        {
                            Id = "TK",
                            Name = "Tokelau"
                        },
                        new
                        {
                            Id = "TO",
                            Name = "Tonga"
                        },
                        new
                        {
                            Id = "TT",
                            Name = "Trinidad and Tobago"
                        },
                        new
                        {
                            Id = "TN",
                            Name = "Tunisia"
                        },
                        new
                        {
                            Id = "TR",
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = "TM",
                            Name = "Turkmenistan"
                        },
                        new
                        {
                            Id = "TC",
                            Name = "Turks and Caicos Islands"
                        },
                        new
                        {
                            Id = "TV",
                            Name = "Tuvalu"
                        },
                        new
                        {
                            Id = "UG",
                            Name = "Uganda"
                        },
                        new
                        {
                            Id = "UA",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = "AE",
                            Name = "United Arab Emirates"
                        },
                        new
                        {
                            Id = "GB",
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = "US",
                            Name = "United States"
                        },
                        new
                        {
                            Id = "UM",
                            Name = "United States Minor Outlying Islands"
                        },
                        new
                        {
                            Id = "UY",
                            Name = "Uruguay"
                        },
                        new
                        {
                            Id = "UZ",
                            Name = "Uzbekistan"
                        },
                        new
                        {
                            Id = "VU",
                            Name = "Vanuatu"
                        },
                        new
                        {
                            Id = "VE",
                            Name = "Venezuela"
                        },
                        new
                        {
                            Id = "VN",
                            Name = "Viet Nam"
                        },
                        new
                        {
                            Id = "VG",
                            Name = "Virgin Islands, British"
                        },
                        new
                        {
                            Id = "VI",
                            Name = "Virgin Islands, U.S."
                        },
                        new
                        {
                            Id = "WF",
                            Name = "Wallis and Futuna"
                        },
                        new
                        {
                            Id = "EH",
                            Name = "Western Sahara"
                        },
                        new
                        {
                            Id = "YE",
                            Name = "Yemen"
                        },
                        new
                        {
                            Id = "ZM",
                            Name = "Zambia"
                        },
                        new
                        {
                            Id = "ZW",
                            Name = "Zimbabwe"
                        });
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.FileAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FilesAttachments");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.ForumUserAttachment", b =>
                {
                    b.Property<int>("FileAttachmentId")
                        .HasColumnType("int");

                    b.Property<string>("ForumUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsCurrentAvatar")
                        .HasColumnType("bit");

                    b.HasKey("FileAttachmentId", "ForumUserId");

                    b.HasIndex("ForumUserId");

                    b.ToTable("ForumUsersAttachments");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.JoinedTopic", b =>
                {
                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<string>("ForumUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TopicId", "ForumUserId");

                    b.HasIndex("ForumUserId");

                    b.ToTable("JoinedTopic");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Like", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PostId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForumUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ForumUserId");

                    b.HasIndex("TopicId");

                    b.ToTable("Posts");

                    b.HasDiscriminator<string>("type").HasValue("basic");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.PostAttachment", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("FileAttachmentId")
                        .HasColumnType("int");

                    b.HasKey("PostId", "FileAttachmentId");

                    b.HasIndex("FileAttachmentId");

                    b.ToTable("PostsAttachments");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.PostReply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("PostsReplies");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.ReplyClosure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("ParentId");

                    b.ToTable("RepliesClosures");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForumUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ForumUserId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.EventPost", b =>
                {
                    b.HasBaseType("EweForum.Infrastructure.Data.Models.Post");

                    b.Property<string>("Cause")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("event");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.ForumUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("CountryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonalInfo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasIndex("CountryId");

                    b.HasDiscriminator().HasValue("ForumUser");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.TextPost", b =>
                {
                    b.HasBaseType("EweForum.Infrastructure.Data.Models.Post");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("text");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.VideoPost", b =>
                {
                    b.HasBaseType("EweForum.Infrastructure.Data.Models.Post");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("video");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.ForumUserAttachment", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.FileAttachment", "FileAttachment")
                        .WithMany("ForumUsersFilesAttachments")
                        .HasForeignKey("FileAttachmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EweForum.Infrastructure.Data.Models.ForumUser", "ForumUser")
                        .WithMany("ForumUsersFilesAttachments")
                        .HasForeignKey("ForumUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FileAttachment");

                    b.Navigation("ForumUser");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.JoinedTopic", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.ForumUser", "ForumUser")
                        .WithMany("JoinedTopics")
                        .HasForeignKey("ForumUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EweForum.Infrastructure.Data.Models.Topic", "Topic")
                        .WithMany("JoinedTopics")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ForumUser");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Like", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EweForum.Infrastructure.Data.Models.ForumUser", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Post", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.ForumUser", "ForumUser")
                        .WithMany("Posts")
                        .HasForeignKey("ForumUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EweForum.Infrastructure.Data.Models.Topic", "Topic")
                        .WithMany("Posts")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ForumUser");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.PostAttachment", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.FileAttachment", "FileAttachment")
                        .WithMany("PostsAttachments")
                        .HasForeignKey("FileAttachmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EweForum.Infrastructure.Data.Models.Post", "Post")
                        .WithMany("PostsAttachments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FileAttachment");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.PostReply", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.Post", "Post")
                        .WithMany("PostsReplies")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EweForum.Infrastructure.Data.Models.ForumUser", "ForumUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ForumUser");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.ReplyClosure", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.PostReply", "Child")
                        .WithMany("Parents")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EweForum.Infrastructure.Data.Models.PostReply", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Topic", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.ForumUser", "ForumUser")
                        .WithMany("CreatedTopics")
                        .HasForeignKey("ForumUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ForumUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.ForumUser", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.Country", "Country")
                        .WithMany("ForumUsers")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Country", b =>
                {
                    b.Navigation("ForumUsers");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.FileAttachment", b =>
                {
                    b.Navigation("ForumUsersFilesAttachments");

                    b.Navigation("PostsAttachments");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Post", b =>
                {
                    b.Navigation("Likes");

                    b.Navigation("PostsAttachments");

                    b.Navigation("PostsReplies");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.PostReply", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Parents");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Topic", b =>
                {
                    b.Navigation("JoinedTopics");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.ForumUser", b =>
                {
                    b.Navigation("CreatedTopics");

                    b.Navigation("ForumUsersFilesAttachments");

                    b.Navigation("JoinedTopics");

                    b.Navigation("Likes");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
