// <auto-generated />
using System;
using EweForum.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EweForum.Infrastructure.Migrations
{
    [DbContext(typeof(EweForumContext))]
    [Migration("20240328193644_SeedUsers")]
    partial class SeedUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Country", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = "AF",
                            Name = "Afghanistan"
                        },
                        new
                        {
                            Id = "AX",
                            Name = "Åland Islands"
                        },
                        new
                        {
                            Id = "AL",
                            Name = "Albania"
                        },
                        new
                        {
                            Id = "DZ",
                            Name = "Algeria"
                        },
                        new
                        {
                            Id = "AS",
                            Name = "American Samoa"
                        },
                        new
                        {
                            Id = "AD",
                            Name = "AndorrA"
                        },
                        new
                        {
                            Id = "AO",
                            Name = "Angola"
                        },
                        new
                        {
                            Id = "AI",
                            Name = "Anguilla"
                        },
                        new
                        {
                            Id = "AQ",
                            Name = "Antarctica"
                        },
                        new
                        {
                            Id = "AG",
                            Name = "Antigua and Barbuda"
                        },
                        new
                        {
                            Id = "AR",
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = "AM",
                            Name = "Armenia"
                        },
                        new
                        {
                            Id = "AW",
                            Name = "Aruba"
                        },
                        new
                        {
                            Id = "AU",
                            Name = "Australia"
                        },
                        new
                        {
                            Id = "AT",
                            Name = "Austria"
                        },
                        new
                        {
                            Id = "AZ",
                            Name = "Azerbaijan"
                        },
                        new
                        {
                            Id = "BS",
                            Name = "Bahamas"
                        },
                        new
                        {
                            Id = "BH",
                            Name = "Bahrain"
                        },
                        new
                        {
                            Id = "BD",
                            Name = "Bangladesh"
                        },
                        new
                        {
                            Id = "BB",
                            Name = "Barbados"
                        },
                        new
                        {
                            Id = "BY",
                            Name = "Belarus"
                        },
                        new
                        {
                            Id = "BE",
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = "BZ",
                            Name = "Belize"
                        },
                        new
                        {
                            Id = "BJ",
                            Name = "Benin"
                        },
                        new
                        {
                            Id = "BM",
                            Name = "Bermuda"
                        },
                        new
                        {
                            Id = "BT",
                            Name = "Bhutan"
                        },
                        new
                        {
                            Id = "BO",
                            Name = "Bolivia"
                        },
                        new
                        {
                            Id = "BA",
                            Name = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = "BW",
                            Name = "Botswana"
                        },
                        new
                        {
                            Id = "BV",
                            Name = "Bouvet Island"
                        },
                        new
                        {
                            Id = "BR",
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = "IO",
                            Name = "British Indian Ocean Territory"
                        },
                        new
                        {
                            Id = "BN",
                            Name = "Brunei Darussalam"
                        },
                        new
                        {
                            Id = "BG",
                            Name = "Bulgaria"
                        },
                        new
                        {
                            Id = "BF",
                            Name = "Burkina Faso"
                        },
                        new
                        {
                            Id = "BI",
                            Name = "Burundi"
                        },
                        new
                        {
                            Id = "KH",
                            Name = "Cambodia"
                        },
                        new
                        {
                            Id = "CM",
                            Name = "Cameroon"
                        },
                        new
                        {
                            Id = "CA",
                            Name = "Canada"
                        },
                        new
                        {
                            Id = "CV",
                            Name = "Cape Verde"
                        },
                        new
                        {
                            Id = "KY",
                            Name = "Cayman Islands"
                        },
                        new
                        {
                            Id = "CF",
                            Name = "Central African Republic"
                        },
                        new
                        {
                            Id = "TD",
                            Name = "Chad"
                        },
                        new
                        {
                            Id = "CL",
                            Name = "Chile"
                        },
                        new
                        {
                            Id = "CN",
                            Name = "China"
                        },
                        new
                        {
                            Id = "CX",
                            Name = "Christmas Island"
                        },
                        new
                        {
                            Id = "CC",
                            Name = "Cocos (Keeling) Islands"
                        },
                        new
                        {
                            Id = "CO",
                            Name = "Colombia"
                        },
                        new
                        {
                            Id = "KM",
                            Name = "Comoros"
                        },
                        new
                        {
                            Id = "CG",
                            Name = "Congo"
                        },
                        new
                        {
                            Id = "CD",
                            Name = "Congo, The Democratic Republic of the"
                        },
                        new
                        {
                            Id = "CK",
                            Name = "Cook Islands"
                        },
                        new
                        {
                            Id = "CR",
                            Name = "Costa Rica"
                        },
                        new
                        {
                            Id = "CI",
                            Name = "Cote D'Ivoire"
                        },
                        new
                        {
                            Id = "HR",
                            Name = "Croatia"
                        },
                        new
                        {
                            Id = "CU",
                            Name = "Cuba"
                        },
                        new
                        {
                            Id = "CY",
                            Name = "Cyprus"
                        },
                        new
                        {
                            Id = "CZ",
                            Name = "Czech Republic"
                        },
                        new
                        {
                            Id = "DK",
                            Name = "Denmark"
                        },
                        new
                        {
                            Id = "DJ",
                            Name = "Djibouti"
                        },
                        new
                        {
                            Id = "DM",
                            Name = "Dominica"
                        },
                        new
                        {
                            Id = "DO",
                            Name = "Dominican Republic"
                        },
                        new
                        {
                            Id = "EC",
                            Name = "Ecuador"
                        },
                        new
                        {
                            Id = "EG",
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = "SV",
                            Name = "El Salvador"
                        },
                        new
                        {
                            Id = "GQ",
                            Name = "Equatorial Guinea"
                        },
                        new
                        {
                            Id = "ER",
                            Name = "Eritrea"
                        },
                        new
                        {
                            Id = "EE",
                            Name = "Estonia"
                        },
                        new
                        {
                            Id = "ET",
                            Name = "Ethiopia"
                        },
                        new
                        {
                            Id = "FK",
                            Name = "Falkland Islands (Malvinas)"
                        },
                        new
                        {
                            Id = "FO",
                            Name = "Faroe Islands"
                        },
                        new
                        {
                            Id = "FJ",
                            Name = "Fiji"
                        },
                        new
                        {
                            Id = "FI",
                            Name = "Finland"
                        },
                        new
                        {
                            Id = "FR",
                            Name = "France"
                        },
                        new
                        {
                            Id = "GF",
                            Name = "French Guiana"
                        },
                        new
                        {
                            Id = "PF",
                            Name = "French Polynesia"
                        },
                        new
                        {
                            Id = "TF",
                            Name = "French Southern Territories"
                        },
                        new
                        {
                            Id = "GA",
                            Name = "Gabon"
                        },
                        new
                        {
                            Id = "GM",
                            Name = "Gambia"
                        },
                        new
                        {
                            Id = "GE",
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = "DE",
                            Name = "Germany"
                        },
                        new
                        {
                            Id = "GH",
                            Name = "Ghana"
                        },
                        new
                        {
                            Id = "GI",
                            Name = "Gibraltar"
                        },
                        new
                        {
                            Id = "GR",
                            Name = "Greece"
                        },
                        new
                        {
                            Id = "GL",
                            Name = "Greenland"
                        },
                        new
                        {
                            Id = "GD",
                            Name = "Grenada"
                        },
                        new
                        {
                            Id = "GP",
                            Name = "Guadeloupe"
                        },
                        new
                        {
                            Id = "GU",
                            Name = "Guam"
                        },
                        new
                        {
                            Id = "GT",
                            Name = "Guatemala"
                        },
                        new
                        {
                            Id = "GG",
                            Name = "Guernsey"
                        },
                        new
                        {
                            Id = "GN",
                            Name = "Guinea"
                        },
                        new
                        {
                            Id = "GW",
                            Name = "Guinea-Bissau"
                        },
                        new
                        {
                            Id = "GY",
                            Name = "Guyana"
                        },
                        new
                        {
                            Id = "HT",
                            Name = "Haiti"
                        },
                        new
                        {
                            Id = "HM",
                            Name = "Heard Island and Mcdonald Islands"
                        },
                        new
                        {
                            Id = "VA",
                            Name = "Holy See (Vatican City State)"
                        },
                        new
                        {
                            Id = "HN",
                            Name = "Honduras"
                        },
                        new
                        {
                            Id = "HK",
                            Name = "Hong Kong"
                        },
                        new
                        {
                            Id = "HU",
                            Name = "Hungary"
                        },
                        new
                        {
                            Id = "IS",
                            Name = "Iceland"
                        },
                        new
                        {
                            Id = "IN",
                            Name = "India"
                        },
                        new
                        {
                            Id = "ID",
                            Name = "Indonesia"
                        },
                        new
                        {
                            Id = "IR",
                            Name = "Iran, Islamic Republic Of"
                        },
                        new
                        {
                            Id = "IQ",
                            Name = "Iraq"
                        },
                        new
                        {
                            Id = "IE",
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = "IM",
                            Name = "Isle of Man"
                        },
                        new
                        {
                            Id = "IL",
                            Name = "Israel"
                        },
                        new
                        {
                            Id = "IT",
                            Name = "Italy"
                        },
                        new
                        {
                            Id = "JM",
                            Name = "Jamaica"
                        },
                        new
                        {
                            Id = "JP",
                            Name = "Japan"
                        },
                        new
                        {
                            Id = "JE",
                            Name = "Jersey"
                        },
                        new
                        {
                            Id = "JO",
                            Name = "Jordan"
                        },
                        new
                        {
                            Id = "KZ",
                            Name = "Kazakhstan"
                        },
                        new
                        {
                            Id = "KE",
                            Name = "Kenya"
                        },
                        new
                        {
                            Id = "KI",
                            Name = "Kiribati"
                        },
                        new
                        {
                            Id = "KP",
                            Name = "Korea, Democratic People'S Republic of"
                        },
                        new
                        {
                            Id = "KR",
                            Name = "Korea, Republic of"
                        },
                        new
                        {
                            Id = "KW",
                            Name = "Kuwait"
                        },
                        new
                        {
                            Id = "KG",
                            Name = "Kyrgyzstan"
                        },
                        new
                        {
                            Id = "LA",
                            Name = "Lao People'S Democratic Republic"
                        },
                        new
                        {
                            Id = "LV",
                            Name = "Latvia"
                        },
                        new
                        {
                            Id = "LB",
                            Name = "Lebanon"
                        },
                        new
                        {
                            Id = "LS",
                            Name = "Lesotho"
                        },
                        new
                        {
                            Id = "LR",
                            Name = "Liberia"
                        },
                        new
                        {
                            Id = "LY",
                            Name = "Libyan Arab Jamahiriya"
                        },
                        new
                        {
                            Id = "LI",
                            Name = "Liechtenstein"
                        },
                        new
                        {
                            Id = "LT",
                            Name = "Lithuania"
                        },
                        new
                        {
                            Id = "LU",
                            Name = "Luxembourg"
                        },
                        new
                        {
                            Id = "MO",
                            Name = "Macao"
                        },
                        new
                        {
                            Id = "MK",
                            Name = "Macedonia, The Former Yugoslav Republic of"
                        },
                        new
                        {
                            Id = "MG",
                            Name = "Madagascar"
                        },
                        new
                        {
                            Id = "MW",
                            Name = "Malawi"
                        },
                        new
                        {
                            Id = "MY",
                            Name = "Malaysia"
                        },
                        new
                        {
                            Id = "MV",
                            Name = "Maldives"
                        },
                        new
                        {
                            Id = "ML",
                            Name = "Mali"
                        },
                        new
                        {
                            Id = "MT",
                            Name = "Malta"
                        },
                        new
                        {
                            Id = "MH",
                            Name = "Marshall Islands"
                        },
                        new
                        {
                            Id = "MQ",
                            Name = "Martinique"
                        },
                        new
                        {
                            Id = "MR",
                            Name = "Mauritania"
                        },
                        new
                        {
                            Id = "MU",
                            Name = "Mauritius"
                        },
                        new
                        {
                            Id = "YT",
                            Name = "Mayotte"
                        },
                        new
                        {
                            Id = "MX",
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = "FM",
                            Name = "Micronesia, Federated States of"
                        },
                        new
                        {
                            Id = "MD",
                            Name = "Moldova, Republic of"
                        },
                        new
                        {
                            Id = "MC",
                            Name = "Monaco"
                        },
                        new
                        {
                            Id = "MN",
                            Name = "Mongolia"
                        },
                        new
                        {
                            Id = "MS",
                            Name = "Montserrat"
                        },
                        new
                        {
                            Id = "MA",
                            Name = "Morocco"
                        },
                        new
                        {
                            Id = "MZ",
                            Name = "Mozambique"
                        },
                        new
                        {
                            Id = "MM",
                            Name = "Myanmar"
                        },
                        new
                        {
                            Id = "NA",
                            Name = "Namibia"
                        },
                        new
                        {
                            Id = "NR",
                            Name = "Nauru"
                        },
                        new
                        {
                            Id = "NP",
                            Name = "Nepal"
                        },
                        new
                        {
                            Id = "NL",
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = "AN",
                            Name = "Netherlands Antilles"
                        },
                        new
                        {
                            Id = "NC",
                            Name = "New Caledonia"
                        },
                        new
                        {
                            Id = "NZ",
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = "NI",
                            Name = "Nicaragua"
                        },
                        new
                        {
                            Id = "NE",
                            Name = "Niger"
                        },
                        new
                        {
                            Id = "NG",
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = "NU",
                            Name = "Niue"
                        },
                        new
                        {
                            Id = "NF",
                            Name = "Norfolk Island"
                        },
                        new
                        {
                            Id = "MP",
                            Name = "Northern Mariana Islands"
                        },
                        new
                        {
                            Id = "NO",
                            Name = "Norway"
                        },
                        new
                        {
                            Id = "OM",
                            Name = "Oman"
                        },
                        new
                        {
                            Id = "PK",
                            Name = "Pakistan"
                        },
                        new
                        {
                            Id = "PW",
                            Name = "Palau"
                        },
                        new
                        {
                            Id = "PS",
                            Name = "Palestinian Territory, Occupied"
                        },
                        new
                        {
                            Id = "PA",
                            Name = "Panama"
                        },
                        new
                        {
                            Id = "PG",
                            Name = "Papua New Guinea"
                        },
                        new
                        {
                            Id = "PY",
                            Name = "Paraguay"
                        },
                        new
                        {
                            Id = "PE",
                            Name = "Peru"
                        },
                        new
                        {
                            Id = "PH",
                            Name = "Philippines"
                        },
                        new
                        {
                            Id = "PN",
                            Name = "Pitcairn"
                        },
                        new
                        {
                            Id = "PL",
                            Name = "Poland"
                        },
                        new
                        {
                            Id = "PT",
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = "PR",
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Id = "QA",
                            Name = "Qatar"
                        },
                        new
                        {
                            Id = "RE",
                            Name = "Reunion"
                        },
                        new
                        {
                            Id = "RO",
                            Name = "Romania"
                        },
                        new
                        {
                            Id = "RU",
                            Name = "Russian Federation"
                        },
                        new
                        {
                            Id = "RW",
                            Name = "RWANDA"
                        },
                        new
                        {
                            Id = "SH",
                            Name = "Saint Helena"
                        },
                        new
                        {
                            Id = "KN",
                            Name = "Saint Kitts and Nevis"
                        },
                        new
                        {
                            Id = "LC",
                            Name = "Saint Lucia"
                        },
                        new
                        {
                            Id = "PM",
                            Name = "Saint Pierre and Miquelon"
                        },
                        new
                        {
                            Id = "VC",
                            Name = "Saint Vincent and the Grenadines"
                        },
                        new
                        {
                            Id = "WS",
                            Name = "Samoa"
                        },
                        new
                        {
                            Id = "SM",
                            Name = "San Marino"
                        },
                        new
                        {
                            Id = "ST",
                            Name = "Sao Tome and Principe"
                        },
                        new
                        {
                            Id = "SA",
                            Name = "Saudi Arabia"
                        },
                        new
                        {
                            Id = "SN",
                            Name = "Senegal"
                        },
                        new
                        {
                            Id = "CS",
                            Name = "Serbia and Montenegro"
                        },
                        new
                        {
                            Id = "SC",
                            Name = "Seychelles"
                        },
                        new
                        {
                            Id = "SL",
                            Name = "Sierra Leone"
                        },
                        new
                        {
                            Id = "SG",
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = "SK",
                            Name = "Slovakia"
                        },
                        new
                        {
                            Id = "SI",
                            Name = "Slovenia"
                        },
                        new
                        {
                            Id = "SB",
                            Name = "Solomon Islands"
                        },
                        new
                        {
                            Id = "SO",
                            Name = "Somalia"
                        },
                        new
                        {
                            Id = "ZA",
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = "GS",
                            Name = "South Georgia and the South Sandwich Islands"
                        },
                        new
                        {
                            Id = "ES",
                            Name = "Spain"
                        },
                        new
                        {
                            Id = "LK",
                            Name = "Sri Lanka"
                        },
                        new
                        {
                            Id = "SD",
                            Name = "Sudan"
                        },
                        new
                        {
                            Id = "SR",
                            Name = "Suriname"
                        },
                        new
                        {
                            Id = "SJ",
                            Name = "Svalbard and Jan Mayen"
                        },
                        new
                        {
                            Id = "SZ",
                            Name = "Swaziland"
                        },
                        new
                        {
                            Id = "SE",
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = "CH",
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = "SY",
                            Name = "Syrian Arab Republic"
                        },
                        new
                        {
                            Id = "TW",
                            Name = "Taiwan, Province of China"
                        },
                        new
                        {
                            Id = "TJ",
                            Name = "Tajikistan"
                        },
                        new
                        {
                            Id = "TZ",
                            Name = "Tanzania, United Republic of"
                        },
                        new
                        {
                            Id = "TH",
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = "TL",
                            Name = "Timor-Leste"
                        },
                        new
                        {
                            Id = "TG",
                            Name = "Togo"
                        },
                        new
                        {
                            Id = "TK",
                            Name = "Tokelau"
                        },
                        new
                        {
                            Id = "TO",
                            Name = "Tonga"
                        },
                        new
                        {
                            Id = "TT",
                            Name = "Trinidad and Tobago"
                        },
                        new
                        {
                            Id = "TN",
                            Name = "Tunisia"
                        },
                        new
                        {
                            Id = "TR",
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = "TM",
                            Name = "Turkmenistan"
                        },
                        new
                        {
                            Id = "TC",
                            Name = "Turks and Caicos Islands"
                        },
                        new
                        {
                            Id = "TV",
                            Name = "Tuvalu"
                        },
                        new
                        {
                            Id = "UG",
                            Name = "Uganda"
                        },
                        new
                        {
                            Id = "UA",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = "AE",
                            Name = "United Arab Emirates"
                        },
                        new
                        {
                            Id = "GB",
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = "US",
                            Name = "United States"
                        },
                        new
                        {
                            Id = "UM",
                            Name = "United States Minor Outlying Islands"
                        },
                        new
                        {
                            Id = "UY",
                            Name = "Uruguay"
                        },
                        new
                        {
                            Id = "UZ",
                            Name = "Uzbekistan"
                        },
                        new
                        {
                            Id = "VU",
                            Name = "Vanuatu"
                        },
                        new
                        {
                            Id = "VE",
                            Name = "Venezuela"
                        },
                        new
                        {
                            Id = "VN",
                            Name = "Viet Nam"
                        },
                        new
                        {
                            Id = "VG",
                            Name = "Virgin Islands, British"
                        },
                        new
                        {
                            Id = "VI",
                            Name = "Virgin Islands, U.S."
                        },
                        new
                        {
                            Id = "WF",
                            Name = "Wallis and Futuna"
                        },
                        new
                        {
                            Id = "EH",
                            Name = "Western Sahara"
                        },
                        new
                        {
                            Id = "YE",
                            Name = "Yemen"
                        },
                        new
                        {
                            Id = "ZM",
                            Name = "Zambia"
                        },
                        new
                        {
                            Id = "ZW",
                            Name = "Zimbabwe"
                        });
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.FileAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FilesAttachments");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.ForumUserAttachment", b =>
                {
                    b.Property<int>("FileAttachmentId")
                        .HasColumnType("int");

                    b.Property<string>("ForumUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FileAttachmentId", "ForumUserId");

                    b.HasIndex("ForumUserId");

                    b.ToTable("ForumUsersAttachments");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.JoinedTopic", b =>
                {
                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<string>("ForumUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TopicId", "ForumUserId");

                    b.HasIndex("ForumUserId");

                    b.ToTable("JoinedTopic");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Like", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PostId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForumUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ForumUserId");

                    b.HasIndex("TopicId");

                    b.ToTable("Posts");

                    b.HasDiscriminator<string>("type").HasValue("basic");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.PostAttachment", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("FileAttachmentId")
                        .HasColumnType("int");

                    b.HasKey("PostId", "FileAttachmentId");

                    b.HasIndex("FileAttachmentId");

                    b.ToTable("PostsAttachments");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.PostReply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("PostsReplies");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.ReplyClosure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("ParentId");

                    b.ToTable("RepliesClosures");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForumUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ForumUserId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1364),
                            Description = "A community for discussing all things related to machines and metal combined.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Industrial Metal",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1330)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1374),
                            Description = "A place for flamenco enthusiasts to share tips, tricks, and discuss their favorite gear and techniques.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Flamenco Enthusiasts",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1373)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1378),
                            Description = "Exploring the wonders of outer space, from celestial bodies to cutting-edge space missions.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Space Exploration",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1376)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1381),
                            Description = "A community for photographers to share their work, techniques, and experiences.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Photography",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1380)
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1385),
                            Description = "For passionate football fans to discuss matches, players, and strategies.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Football Fans",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1383)
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1389),
                            Description = "Keeping up with the latest global news and events.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "World News",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1388)
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1393),
                            Description = "Discussing ways to preserve and protect the environment for future generations.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Environmental Conservation",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1392)
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1397),
                            Description = "Exploring the latest fashion trends, styles, and industry news.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Fashion Trends",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1395)
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1400),
                            Description = "Sharing recipes, tips, and techniques for delicious and nutritious vegan meals.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Vegan Meals",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1399)
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1405),
                            Description = "For bookworms to discuss their favorite novels, authors, and literary themes.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Literature Lovers",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1403)
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1408),
                            Description = "Discussing medical breakthroughs, health tips, and wellness strategies.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Medicine and Health",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1407)
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1412),
                            Description = "A community for programmers to share code, ask questions, and discuss programming languages and techniques.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Programming Community",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1410)
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1415),
                            Description = "For fitness enthusiasts to share workout routines, diet plans, and motivation tips.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Fitness Freaks",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1414)
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1419),
                            Description = "Sharing ideas, tips, and tutorials for do-it-yourself projects and crafts.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "DIY Projects",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1418)
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1423),
                            Description = "A community for animal lovers to share cute photos, adoption stories, and pet care tips.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Animal Lovers",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1421)
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1426),
                            Description = "Discussing political ideologies, current events, and policy issues.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Political Debates",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1425)
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1430),
                            Description = "For artists of all mediums to share their work, techniques, and inspiration.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Artists' Corner",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1428)
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1434),
                            Description = "Sharing travel experiences, tips, and recommendations for exploring the world.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Travel Enthusiasts",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1433)
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1438),
                            Description = "A community for cinephiles to discuss movies, directors, and cinematic techniques.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Film Buffs",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1436)
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1441),
                            Description = "Exploring historical events, figures, and civilizations from around the world.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "History Buffs",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1440)
                        },
                        new
                        {
                            Id = 21,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1445),
                            Description = "For home cooks and foodies to share recipes, cooking tips, and culinary adventures.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Cooking Enthusiasts",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1444)
                        },
                        new
                        {
                            Id = 22,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1449),
                            Description = "Discussing the latest advancements in technology, gadgets, and digital trends.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Technology Innovations",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1447)
                        },
                        new
                        {
                            Id = 23,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1452),
                            Description = "A community for yogis and meditation practitioners to share techniques, experiences, and wellness tips.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Yoga and Meditation",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1451)
                        },
                        new
                        {
                            Id = 24,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1456),
                            Description = "Exploring the realms of science fiction and fantasy literature, movies, and TV shows.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Science Fiction & Fantasy",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1454)
                        },
                        new
                        {
                            Id = 25,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1459),
                            Description = "A supportive community for parents to share advice, experiences, and parenting tips.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Parenting Advice",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1458)
                        },
                        new
                        {
                            Id = 26,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1463),
                            Description = "Discussing cryptocurrency news, investment strategies, and blockchain technology.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Cryptocurrency Investors",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1461)
                        },
                        new
                        {
                            Id = 27,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1466),
                            Description = "Sharing ideas, tips, and inspiration for interior design and home decor.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Hygge",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1465)
                        },
                        new
                        {
                            Id = 28,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1470),
                            Description = "For gardeners to share tips, advice, and photos of their gardens.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Gardening Enthusiasts",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1469)
                        },
                        new
                        {
                            Id = 29,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1474),
                            Description = "Discussing psychological theories, mental health, and human behavior.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Psychology Discussions",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1472)
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1477),
                            Description = "A community for beer lovers to discuss craft beer, breweries, and tasting experiences.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Craft Beer Enthusiasts",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1476)
                        },
                        new
                        {
                            Id = 31,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1481),
                            Description = "For entrepreneurs and startup enthusiasts to share advice, resources, and success stories.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Business Startups",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1479)
                        },
                        new
                        {
                            Id = 32,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1484),
                            Description = "A community for language learners to practice, share resources, and seek advice.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Language Learning",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1483)
                        },
                        new
                        {
                            Id = 33,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1488),
                            Description = "Sharing photos and techniques for capturing the beauty of the night sky.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Astrophotography",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1486)
                        },
                        new
                        {
                            Id = 34,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1493),
                            Description = "For cyclists to discuss bikes, routes, and cycling events.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Cycling Community",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1491)
                        },
                        new
                        {
                            Id = 35,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1496),
                            Description = "A community for culinary enthusiasts to participate in cooking challenges and share their creations.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Cooking Challenges",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1495)
                        },
                        new
                        {
                            Id = 36,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1500),
                            Description = "A supportive space for parents to seek advice, share experiences, and find solidarity.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Parenting Support",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1498)
                        },
                        new
                        {
                            Id = 37,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1503),
                            Description = "Receiving constructive feedback and critique on photography techniques and compositions.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Photography Critique",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1502)
                        },
                        new
                        {
                            Id = 38,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1507),
                            Description = "Discussing the causes, impacts, and solutions to climate change.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Climate Change Discussions",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1505)
                        },
                        new
                        {
                            Id = 39,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1510),
                            Description = "For musicians and producers to share techniques, software recommendations, and collaborate on music projects.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Music Production",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1509)
                        },
                        new
                        {
                            Id = 40,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1514),
                            Description = "Exploring the wonders of the cosmos, from stars and galaxies to black holes and nebulae.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Astronomy Enthusiasts",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1512)
                        },
                        new
                        {
                            Id = 41,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1524),
                            Description = "Discussing AI technologies, applications, and ethical implications.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Artificial Intelligence",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1522)
                        },
                        new
                        {
                            Id = 42,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1528),
                            Description = "A community for book lovers to discuss their current reads, share recommendations, and host virtual book clubs.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Book Club",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1526)
                        },
                        new
                        {
                            Id = 43,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1531),
                            Description = "A community for setting and achieving fitness goals, sharing progress, and supporting each other's journey.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Fitness Challenges",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1530)
                        },
                        new
                        {
                            Id = 44,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1535),
                            Description = "Discussing nutrition, meal planning, and healthy eating habits for a balanced lifestyle.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Healthy Eating",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1533)
                        },
                        new
                        {
                            Id = 45,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1538),
                            Description = "A place for fashion enthusiasts to seek advice, share styling tips, and discuss the latest trends.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Fashion Advice",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1537)
                        },
                        new
                        {
                            Id = 46,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1542),
                            Description = "Exploring the therapeutic benefits of art-making, creative expression, and self-discovery.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Art Therapy",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1540)
                        },
                        new
                        {
                            Id = 47,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1545),
                            Description = "A supportive space for writers to share their work, receive feedback, and improve their craft.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Writing Workshop",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1544)
                        },
                        new
                        {
                            Id = 48,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1549),
                            Description = "Discussing VR technology, gaming experiences, and immersive virtual worlds.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Virtual Reality",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1548)
                        },
                        new
                        {
                            Id = 49,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1553),
                            Description = "For baking enthusiasts to share recipes, baking tips, and showcase their baked creations.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Baking Enthusiasts",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1551)
                        },
                        new
                        {
                            Id = 50,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1556),
                            Description = "A community for sharing motivational quotes, success stories, and tips for staying committed to fitness goals.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Fitness Motivation",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1555)
                        },
                        new
                        {
                            Id = 51,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1560),
                            Description = "Connecting rescue animals with loving homes, sharing adoption stories, and promoting pet welfare.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Pet Adoption",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1558)
                        },
                        new
                        {
                            Id = 52,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1563),
                            Description = "Discussing thought-provoking documentaries, exploring social issues, and documentary filmmaking techniques.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Documentary Films",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1562)
                        },
                        new
                        {
                            Id = 53,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1567),
                            Description = "We are all the indian guy with the pool but not just at 2 am but 24/7",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "DIY Home Improvement",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1565)
                        },
                        new
                        {
                            Id = 54,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1570),
                            Description = "For aspiring and seasoned entrepreneurs to share insights, resources, and strategies for success in business.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Entrepreneurship",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1569)
                        },
                        new
                        {
                            Id = 55,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1630),
                            Description = "",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Mindfulness Meditation",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1628)
                        },
                        new
                        {
                            Id = 56,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1634),
                            Description = "Exploring the world of castles, from medieval fortresses to fairytale palaces, discussing history, architecture, and legends surrounding these majestic structures.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Castle Connoisseurs",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1632)
                        },
                        new
                        {
                            Id = 57,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1637),
                            Description = "Indulging in the world of pastries and baked goods, from flaky croissants and decadent cakes to delicate macarons and traditional pies.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Pastry Paradise",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1636)
                        },
                        new
                        {
                            Id = 58,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1641),
                            Description = "Journeying back in time to the medieval era, exploring life, culture, and warfare in the Middle Ages, from knights and castles to feudalism and chivalry.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Medieval Meanderings",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1639)
                        },
                        new
                        {
                            Id = 59,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1644),
                            Description = "A collective for craft beer enthusiasts to share homebrewing recipes, brewery visits, and discussions about the art and science of beer-making.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Craft Beer Collective",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1643)
                        },
                        new
                        {
                            Id = 60,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1648),
                            Description = "A society for aficionados of sweets and desserts, from creamy gelato and rich chocolates to fruity tarts and sugary confections.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Sweet Tooth Society",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1647)
                        },
                        new
                        {
                            Id = 61,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1651),
                            Description = "Chronicling the history and stories of castles around the world, from iconic landmarks like Edinburgh Castle to lesser-known fortifications with fascinating tales.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Castle Chronicles",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1650)
                        },
                        new
                        {
                            Id = 62,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1655),
                            Description = "A brotherhood of beer aficionados, celebrating the camaraderie and community spirit fostered by the love of good beer and great company.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Brewery Brotherhood",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1654)
                        },
                        new
                        {
                            Id = 63,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1659),
                            Description = "Indulging in the artistry and craftsmanship of French patisserie, from delicate éclairs and flaky mille-feuille to buttery croissants and colorful macarons.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Patisserie Passion",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1657)
                        },
                        new
                        {
                            Id = 64,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1662),
                            Description = "A fellowship of fantasy enthusiasts exploring fictional castles from literature, movies, and games, from Hogwarts Castle to the Red Keep of King's Landing.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Fantasy Fortress Fellowship",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1661)
                        },
                        new
                        {
                            Id = 65,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1666),
                            Description = "For fans of dark southern country music, embracing the eerie atmospheres, haunting melodies, and swampy vibes of bands like Those Poor Bastards and Sons of Perdition.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Swamp Metal Syndicate",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1664)
                        },
                        new
                        {
                            Id = 66,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1671),
                            Description = "Delving into the world of cryptids and mythical creatures, from Bigfoot and the Loch Ness Monster to Mothman and the Chupacabra, exploring sightings, legends, and cryptozoological mysteries.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Cryptid Chronicles",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1669)
                        },
                        new
                        {
                            Id = 67,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1674),
                            Description = "Gathering around the virtual campfire to share and discuss spooky stories, urban legends, and chilling encounters with the unknown.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Tales from the Shadows",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1673)
                        },
                        new
                        {
                            Id = 68,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1678),
                            Description = "Exploring the realms of the paranormal, from ghost sightings and haunted locations to UFO encounters and unexplained phenomena, and sharing personal experiences and investigations.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Paranormal Pursuit",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1676)
                        },
                        new
                        {
                            Id = 69,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1681),
                            Description = "A collection of favorite quotes from literature, philosophy, movies, and beyond, sharing timeless words of wisdom and inspiration.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Words of Wisdom",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1680)
                        },
                        new
                        {
                            Id = 70,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1685),
                            Description = "A community for fans of Southern Gothic literature and culture, discussing themes of decay, isolation, and the grotesque in works by authors like Flannery O'Connor, William Faulkner, and Cormac McCarthy.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Southern Gothic Society",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1683)
                        },
                        new
                        {
                            Id = 71,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1688),
                            Description = "Dedicated to the study and exploration of cryptids and unknown animals, sharing research, eyewitness accounts, and investigations into elusive creatures.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Cryptozoology Club",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1687)
                        },
                        new
                        {
                            Id = 72,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1692),
                            Description = "A gathering place for lovers of mysteries and thrillers, discussing whodunits, detective stories, and psychological suspense novels, and sharing recommendations for gripping reads.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Midnight Mysteries",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1690)
                        },
                        new
                        {
                            Id = 73,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1695),
                            Description = "Embarking on a journey to uncover the mysteries of the supernatural world, from psychic phenomena and hauntings to demonic possessions and spiritual encounters.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Supernatural Seekers",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1694)
                        },
                        new
                        {
                            Id = 74,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1699),
                            Description = "Sharing and discussing favorite quotes from literature, movies, music, and pop culture, from profound insights to witty one-liners.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Quotable Quotes Corner",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1698)
                        },
                        new
                        {
                            Id = 75,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1703),
                            Description = "For home cooks and foodies to share recipes, cooking tips, and culinary adventures.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Cooking Enthusiasts",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1701)
                        },
                        new
                        {
                            Id = 76,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1706),
                            Description = "Discussing the latest advancements in technology, gadgets, and digital trends.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Technology Innovations",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1705)
                        },
                        new
                        {
                            Id = 77,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1710),
                            Description = "A community for yogis and meditation practitioners to share techniques, experiences, and wellness tips.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Yoga and Meditation",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1708)
                        },
                        new
                        {
                            Id = 78,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1713),
                            Description = "For anime enthusiasts to discuss their favorite series, characters, and genres.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Anime",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1712)
                        },
                        new
                        {
                            Id = 79,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1717),
                            Description = "Exploring the realms of science fiction and fantasy literature, movies, and TV shows.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Science Fiction & Fantasy",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1715)
                        },
                        new
                        {
                            Id = 80,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1720),
                            Description = "A supportive community for parents to share advice, experiences, and parenting tips.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Parenting Advice",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1719)
                        },
                        new
                        {
                            Id = 81,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1724),
                            Description = "Discussing cryptocurrency news, investment strategies, and blockchain technology.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Cryptocurrency Investors",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1722)
                        },
                        new
                        {
                            Id = 82,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1727),
                            Description = "Sharing ideas, tips, and inspiration for interior design and home decor.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Home Decor Inspiration",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1726)
                        },
                        new
                        {
                            Id = 83,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1731),
                            Description = "For gardeners to share tips, advice, and photos of their gardens.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Gardening Enthusiasts",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1729)
                        },
                        new
                        {
                            Id = 84,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1734),
                            Description = "Discussing psychological theories, mental health, and human behavior.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Psychology Discussions",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1733)
                        },
                        new
                        {
                            Id = 85,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1738),
                            Description = "A cozy corner for kawaii enthusiasts to share their love for all things cute, from adorable characters to colorful accessories.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Kawaii Cafe Corner",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1737)
                        },
                        new
                        {
                            Id = 86,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1742),
                            Description = "A society celebrating the beauty of cherry blossoms and Japanese culture, hosting events and discussions inspired by the ephemeral beauty of sakura season.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Sakura Blossom Society",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1740)
                        },
                        new
                        {
                            Id = 87,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1745),
                            Description = "Indulging in the chewy goodness of mochi treats, from traditional flavors to innovative creations, and sharing recipes and recommendations.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Mochi Madness Club",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1744)
                        },
                        new
                        {
                            Id = 88,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1749),
                            Description = "A virtual nook for cat lovers and kawaii enthusiasts, featuring cute cat memes, GIFs, and discussions about feline friends.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Neko Nook",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1747)
                        },
                        new
                        {
                            Id = 89,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1752),
                            Description = "A hangout spot for fans of Harajuku fashion and kawaii culture, sharing outfit ideas, shopping tips, and trends from Tokyo's vibrant street scene.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Harajuku Hangout",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1751)
                        },
                        new
                        {
                            Id = 90,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1756),
                            Description = "Embarking on culinary adventures inspired by kawaii aesthetics, from adorable bento boxes to cute character-themed desserts.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Kawaii Kitchen Adventures",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1754)
                        },
                        new
                        {
                            Id = 91,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1759),
                            Description = "Finding tranquility and inspiration in Japanese gardens, exploring the principles of zen and mindfulness through nature.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Zen Garden Zenith",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1758)
                        },
                        new
                        {
                            Id = 92,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1763),
                            Description = "A hideout for Hello Kitty fans to connect and share their passion for Sanrio's beloved character, from merchandise collections to fan art.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Hello Kitty Hideout",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1761)
                        },
                        new
                        {
                            Id = 93,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1766),
                            Description = "A community of dreamers embracing the concept of yume (dream) in Japanese culture, sharing aspirations, goals, and whimsical visions.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Yume Dreamers",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1765)
                        },
                        new
                        {
                            Id = 94,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1770),
                            Description = "Crafting cute and kawaii creations, from plush toys to DIY accessories, and sharing crafting tips and tutorials.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Kawaii Crafting Club",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1769)
                        },
                        new
                        {
                            Id = 95,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1774),
                            Description = "Discussing music composition techniques, songwriting tips, and musical inspiration.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Music Composition",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1772)
                        },
                        new
                        {
                            Id = 96,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1777),
                            Description = "How to lose weight and not starve (too much)",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Weight Loss Recipes",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1776)
                        },
                        new
                        {
                            Id = 97,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1781),
                            Description = "Engaging in discussions about books, characters, plot twists, and literary analysis that you wish you didn't read.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Terrible Book Discussions",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1779)
                        },
                        new
                        {
                            Id = 98,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1784),
                            Description = "Participating in fitness challenges, setting goals, and tracking progress. Only for crossfitters.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Fitness Challenges",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1783)
                        },
                        new
                        {
                            Id = 99,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1817),
                            Description = "Exploring emerging technology trends, innovations, and future predictions.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Technology Trends",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1815)
                        },
                        new
                        {
                            Id = 100,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1821),
                            Description = "Analyzing films, cinematography techniques, and narrative structures.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Film Analysis",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1819)
                        },
                        new
                        {
                            Id = 101,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1825),
                            Description = "Exploring the lives, achievements, and legacies of historical figures.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Historical Figures",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1823)
                        },
                        new
                        {
                            Id = 102,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1828),
                            Description = "Sharing creative writing prompts, exercises, and challenges to inspire writing.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Creative Writing Prompts",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1827)
                        },
                        new
                        {
                            Id = 103,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1832),
                            Description = "A tavern for horror writers to share spine-chilling stories, discuss writing techniques, and collaborate on dark and unsettling narratives.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Terror Tales Tavern",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1830)
                        },
                        new
                        {
                            Id = 104,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1835),
                            Description = "A guild for writers of gothic fiction, where members delve into the shadows of the human psyche, crafting tales of terror and suspense.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Gothic Writers Guild",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1834)
                        },
                        new
                        {
                            Id = 105,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1839),
                            Description = "An ensemble of writers and readers, all channeling eldritch echoes, where horror writers explore cosmic horrors, eldritch abominations, and the unknown terrors of the cosmos.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Eldritch Echoes Ensemble",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1837)
                        },
                        new
                        {
                            Id = 106,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1842),
                            Description = "A workshop for fans of The Witcher series, where enthusiasts discuss Geralt's adventures, monster hunting techniques, and the rich lore of the world created by Andrzej Sapkowski.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Witcher's Workshop",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1841)
                        },
                        new
                        {
                            Id = 107,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1846),
                            Description = "A sanctuary for Dark Souls fans to share their experiences, strategies, and lore interpretations from the challenging and atmospheric games in the series.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Dark Souls Sanctuary",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1844)
                        },
                        new
                        {
                            Id = 108,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1850),
                            Description = "Pioneering the mind-bending puzzles and innovative gameplay of the Portal series, where fans discuss portal mechanics, companion cubes, and the enigmatic GLaDOS.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Portal Pioneers",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1848)
                        },
                        new
                        {
                            Id = 109,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1853),
                            Description = "A den for fans of the Doom series, where demon slayers gather to discuss fast-paced action, brutal weapons, and the eternal battle against the forces of Hell.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Doom Den",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1852)
                        },
                        new
                        {
                            Id = 110,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1857),
                            Description = "An oasis for Overwatch players, where heroes assemble to discuss strategies, share highlight reels, and celebrate the vibrant characters and diverse maps of Blizzard's team-based shooter.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Overwatch Oasis",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1855)
                        },
                        new
                        {
                            Id = 111,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1860),
                            Description = "Building empires and shaping history in the Civilization series, where players discuss strategy, diplomacy, and the art of war in Sid Meier's iconic turn-based strategy game.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Civilization Citadel",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1859)
                        },
                        new
                        {
                            Id = 112,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1864),
                            Description = "Embracing the tranquility and charm of Stardew Valley, where virtual farmers tend to crops, raise animals, and forge friendships in ConcernedApe's beloved farming simulation game.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Stardew Valley Valley",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1862)
                        },
                        new
                        {
                            Id = 113,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1867),
                            Description = "Navigating the sprawling open-world landscapes and criminal underworlds of the Grand Theft Auto series, where players discuss heists, car chases, and the chaos of life in the city.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "GTA Gangland",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1866)
                        },
                        new
                        {
                            Id = 114,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1871),
                            Description = "A community for computer hardware enthusiasts to stay updated on the latest news, releases, and innovations in the world of technology, from CPUs and GPUs to storage solutions and peripherals.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Tech Tidbits",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1870)
                        },
                        new
                        {
                            Id = 115,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1875),
                            Description = "A corner for exploring conspiracy theories and alternative narratives, where members delve into mysteries, cover-ups, and unexplained phenomena, sharing theories and evidence.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Conspiracy Corner",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1873)
                        },
                        new
                        {
                            Id = 116,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1878),
                            Description = "A space for discussing atmospheric phenomena and weather mysteries, from auroras and lightning sprites to ball lightning and mysterious cloud formations.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Atmospheric Anomalies",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1877)
                        },
                        new
                        {
                            Id = 117,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1882),
                            Description = "A haven for computer hardware enthusiasts to share reviews, benchmarks, and DIY projects, discussing everything from overclocking to water cooling and RGB lighting.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Hardware Haven",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1880)
                        },
                        new
                        {
                            Id = 118,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1885),
                            Description = "A hideout for Hello Kitty fans to connect and share their passion for Sanrio's beloved character, from merchandise collections to fan art.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Hello Kitty Hideout",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1884)
                        },
                        new
                        {
                            Id = 119,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1889),
                            Description = "A community of dreamers embracing the concept of yume (dream) in Japanese culture, sharing aspirations, goals, and whimsical visions.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Yume Dreamers",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1887)
                        },
                        new
                        {
                            Id = 120,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1892),
                            Description = "Crafting cute and kawaii creations, from plush toys to DIY accessories, and sharing crafting tips and tutorials.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Kawaii Crafting Club",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1891)
                        },
                        new
                        {
                            Id = 121,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1896),
                            Description = "A community for Python enthusiasts to discuss best practices, libraries, and projects, sharing tips and tricks for mastering the versatile programming language.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Python Prodigies",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1895)
                        },
                        new
                        {
                            Id = 122,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1900),
                            Description = "A junction for JavaScript developers to explore frameworks, tooling, and emerging trends in web development, from front-end frameworks like React to server-side technologies like Node.js.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "JavaScript Junction",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1898)
                        },
                        new
                        {
                            Id = 123,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1903),
                            Description = "A community for basketball enthusiasts to discuss slam dunks, buzzer-beaters, and mind-blowing crossovers from the hardwood court.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "NBA",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1902)
                        },
                        new
                        {
                            Id = 124,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1907),
                            Description = "A gathering place for die-hard soccer fans to debate the beautiful game, from stunning goals to controversial referee decisions, and everything in between.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Soccer",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1905)
                        },
                        new
                        {
                            Id = 125,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1910),
                            Description = "A cage for mixed martial arts enthusiasts to witness jaw-dropping knockouts, slick submissions, and adrenaline-fueled battles inside the octagon.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "MMA Mania",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1909)
                        },
                        new
                        {
                            Id = 126,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1914),
                            Description = "A space for fans of Banksy's thought-provoking and often controversial street art to admire his creations, discuss their interpretations, and share sightings of his iconic works around the world.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Banksy",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1912)
                        },
                        new
                        {
                            Id = 127,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1918),
                            Description = "A celestial realm for fans of Bjork's avant-garde music to explore her eclectic discography, dissect her experimental soundscapes, and discuss the impact of her innovative approach to music-making.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Bjork",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1916)
                        },
                        new
                        {
                            Id = 128,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1921),
                            Description = "A fiery pit for fans of Rammstein's explosive music to headbang to their heavy riffs, belt out their powerful lyrics, and discuss the German band's legendary live performances.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Rammstein",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1920)
                        },
                        new
                        {
                            Id = 129,
                            CreatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1925),
                            Description = "A community for music enthusiasts to explore the boundary-pushing sounds of Bjork, the industrial metal madness of Rammstein, and the subversive street art of Banksy, celebrating their contributions to the world of art and music.",
                            ForumUserId = "23bf5fc9-cefd-45d3-8f2b-82e34b675c40",
                            IsActive = true,
                            Title = "Psychadelics in sound waves",
                            UpdatedOn = new DateTime(2024, 3, 28, 21, 36, 43, 172, DateTimeKind.Local).AddTicks(1923)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "86e02b21-25d7-4246-af4f-beac10cff1a6",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "9ee7d2b0-3042-42f3-acca-cbfdbd8e188a",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "d2c474eb-8f8c-4688-bcf3-3fb2447ac5ec",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "8b29eded-bdbc-470b-a183-5d82c3c49c97",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "88a75459-c19a-40f1-98bb-5d51bb514359",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "c6831bc6-00ef-4da1-9f61-df4c26101bbf",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "aef15ff0-bdc1-4a4f-9a52-7e68f90a75d7",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "e9075bbf-849c-4133-a682-f1dc7467ddf6",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "79c263d0-fea3-4908-bc1e-d298311067d2",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "6d07c695-8bfc-4a06-86e5-74bb86b3fd79",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "73f3662c-2459-4b3e-8cc4-fabf43d05236",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "1093c6dc-48eb-486d-a866-b8f8b4bbf77b",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "ba413c8e-bd92-4b67-ad4e-bd7ac0236013",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "d8a49048-5ac1-4586-907d-baceecb14fed",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "95d90f10-67fa-418b-a16d-1a63bfeb970f",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "4a99a16d-1096-44cb-96a3-053b56917bcf",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "8cf89a46-bd09-4384-96c0-c1c654841bbb",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "5a118590-c2ac-4064-aab1-abbad1cd6bce",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "aaf47a62-e659-4d92-bab6-02a3dd812aeb",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "6ebf8e6e-516b-463f-b996-dd327746e711",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "cb96d59c-bb9b-4128-b9d0-dc7c86f6419e",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "07b40a11-9941-4b21-a90a-605b11cdb487",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "7c61be63-6a12-4301-bd3b-cc50861735f0",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "b3d890e0-11b6-417a-b7f7-41473235e3fc",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "4635c38a-41ec-42e1-9f67-9f8b3a7e3d80",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "e4490d07-ba6d-467a-9dda-b9f9b0c3928e",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "b0433d4e-d7df-4868-b831-a17f0a30af31",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "54c4d727-865e-438b-ab3f-339a689c5c19",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        },
                        new
                        {
                            UserId = "c6317ffc-2f72-40b3-acee-9a85dab1cd66",
                            RoleId = "1bda777f-d458-4ae6-b89a-e1f019149bec"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.EventPost", b =>
                {
                    b.HasBaseType("EweForum.Infrastructure.Data.Models.Post");

                    b.Property<string>("Cause")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("event");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.ForumUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("CountryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonalInfo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasIndex("CountryId");

                    b.HasDiscriminator().HasValue("ForumUser");

                    b.HasData(
                        new
                        {
                            Id = "86e02b21-25d7-4246-af4f-beac10cff1a6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0fda44f3-7c41-4f98-9e8a-dc747ac11796",
                            Email = "dynamicDolphin17@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "dynamicdolphin17@gmail.com",
                            NormalizedUserName = "dynamicdolphin17",
                            PasswordHash = "AQAAAAEAACcQAAAAEDp1AygeiFHD0soTpTC7Jc3ZKivpllAbyCBhlZUFbHbbJqtZOCKycEmpZKHIhRU+Pw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "33712872-88fd-4c69-8771-b9fac0bf8b1c",
                            TwoFactorEnabled = false,
                            UserName = "dynamicDolphin17",
                            CountryId = "US",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "9ee7d2b0-3042-42f3-acca-cbfdbd8e188a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dd95db04-7455-4e88-8272-46a3beef263a",
                            Email = "coolUser23@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "cooluser23@yahoo.com",
                            NormalizedUserName = "cooluser23",
                            PasswordHash = "AQAAAAEAACcQAAAAEEuv+6UD3OIO2xOLbS0SkOZPrrAgm6tyLFtmEICQryUYCOB/RQEPgswnLgQa+9c0KQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c7d0baea-5d11-428b-92dc-6df23c1142e2",
                            TwoFactorEnabled = false,
                            UserName = "coolUser23",
                            CountryId = "CA",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "d2c474eb-8f8c-4688-bcf3-3fb2447ac5ec",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ef3db528-cc90-42ad-9f5b-11a2e7bc1a8a",
                            Email = "cleverCoder99@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "clevercoder99@gmail.com",
                            NormalizedUserName = "clevercoder99",
                            PasswordHash = "AQAAAAEAACcQAAAAEH558bQV5PTB/FSE4jS34iGzpd9otrROSzGMYdIZuX2fxbTtKNdPfwlyjwpBEtZi3g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d2e20192-afb8-4c49-88b0-3fbab94cbfc9",
                            TwoFactorEnabled = false,
                            UserName = "cleverCoder99",
                            CountryId = "GB",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "8b29eded-bdbc-470b-a183-5d82c3c49c97",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7e5f6def-47b6-4c54-a8f9-5a0d75026253",
                            Email = "awesomeSauce88@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "awesomesauce88@hotmail.com",
                            NormalizedUserName = "awesomesauce88",
                            PasswordHash = "AQAAAAEAACcQAAAAEKUlApr3uD8ODT5WZf9Dp/OYrycbu5bCYjBIkdCdiXLlBa1SPdRAYQ+yWIXwi0q5yQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f364d296-9746-4a33-ad8e-994ae0009c00",
                            TwoFactorEnabled = false,
                            UserName = "awesomeSauce88",
                            CountryId = "AU",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "88a75459-c19a-40f1-98bb-5d51bb514359",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5a4bd47b-7762-4d6f-97aa-bfff8dd47f16",
                            Email = "happyGoLucky42@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "happygolucky42@example.com",
                            NormalizedUserName = "happygolucky42",
                            PasswordHash = "AQAAAAEAACcQAAAAEIgFRzr8Z2ha2lhtGSlLqvjpmhbijQPHpKC+X4Oxpe2HQlCoR9zH7qMPeGU7Alh9JA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5b32a97c-64ef-414c-9cb9-723166056550",
                            TwoFactorEnabled = false,
                            UserName = "happyGoLucky42",
                            CountryId = "DE",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "c6831bc6-00ef-4da1-9f61-df4c26101bbf",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0a606dbe-f6c2-4b8b-80b0-14f243e71d40",
                            Email = "cherrymoncheri@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "cherrymoncheri@example.com",
                            NormalizedUserName = "craftyninja77",
                            PasswordHash = "AQAAAAEAACcQAAAAEP4g8yCA1RjE1k52ohwkedwaeLCEeMThENXkOpJgVjVj4+eu/10DPliRQ7SgIOFmUQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "00537aab-c57d-442d-87fc-2af496c924b5",
                            TwoFactorEnabled = false,
                            UserName = "craftyNinja77",
                            CountryId = "FR",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "aef15ff0-bdc1-4a4f-9a52-7e68f90a75d7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5a3a175e-3b07-4ab2-8ffa-bb161b1d7c7b",
                            Email = "dreamyArtist21@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "dreamyartist21@example.com",
                            NormalizedUserName = "turbogamer55",
                            PasswordHash = "AQAAAAEAACcQAAAAEIi/c8iJ7/+3RXQmNZDC7Gz1h/3f8RIdmtZOPzJ59oVqnoPBDCFCQKIzfjaFVF/5Jg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4a20609f-d76e-4133-827f-1086cf335453",
                            TwoFactorEnabled = false,
                            UserName = "TURBOGamer55",
                            CountryId = "JP",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "e9075bbf-849c-4133-a682-f1dc7467ddf6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ebe4c67e-a5dc-40c3-ba39-c93e99342afa",
                            Email = "dreamy_girl_23835@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "dreamy_girl_23835@example.com",
                            NormalizedUserName = "dreamyartist21",
                            PasswordHash = "AQAAAAEAACcQAAAAECGXFBtHT9aSn+28NMHraJOwoN1HytTnyNVMdbCLbtTcXegYOzh2BvNpiPNSJggxnw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f56d6c6a-9ea4-40f1-b2ac-cecf3c83569e",
                            TwoFactorEnabled = false,
                            UserName = "DreamyArtist21",
                            CountryId = "IT",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "79c263d0-fea3-4908-bc1e-d298311067d2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6e319cde-eac3-4b25-8221-d30c7faceaf5",
                            Email = "blake_james@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "blake_james@example.com",
                            NormalizedUserName = "mysticalmeadow",
                            PasswordHash = "AQAAAAEAACcQAAAAENW+ad93Nvo/oj2h0nXC6h2gUM0Ph8SyxZkVJqkbQdNUFw5mmYRQac4gVB149hXdMA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8f6c5a05-837c-4373-888f-d4ff3d180654",
                            TwoFactorEnabled = false,
                            UserName = "MysticalMeadow",
                            CountryId = "RU",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "6d07c695-8bfc-4a06-86e5-74bb86b3fd79",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "217c7021-61e1-46a4-a2db-77338faf4eb4",
                            Email = "alexis_bladel_rughs@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "alexis_bladel_rughs@example.com",
                            NormalizedUserName = "enchantededen",
                            PasswordHash = "AQAAAAEAACcQAAAAEIxyztz4/i+wLqjZIDU6CO8PCsiKk3LvTeiBCzw8GtPBf677PWIIOMFf7Coi2fdPDw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fbda0149-1bd3-40c1-9534-56574f4387db",
                            TwoFactorEnabled = false,
                            UserName = "EnchantedEden",
                            CountryId = "BR",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "73f3662c-2459-4b3e-8cc4-fabf43d05236",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5f4395b2-1bce-4d3f-8518-bb4b0e2f8aa2",
                            Email = "marny_brahms@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "marny_brahms@gmail.com",
                            NormalizedUserName = "cosmiccascade",
                            PasswordHash = "AQAAAAEAACcQAAAAECJIpVbebk9ys9JFI13yECjlhveXL1L+0Nz2XEcnOKjxBMh+OM0yAcl/Vkp8MNexGA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2b10f5c6-c9da-47d9-af8d-95b8d7d35252",
                            TwoFactorEnabled = false,
                            UserName = "CosmicCascade",
                            CountryId = "US",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "1093c6dc-48eb-486d-a866-b8f8b4bbf77b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "28d4c5a1-f390-46b8-8644-9349b4f8ddcf",
                            Email = "victor_ulster@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "victor_ulster@yahoo.com",
                            NormalizedUserName = "vectorvortex",
                            PasswordHash = "AQAAAAEAACcQAAAAEJyE37fr22/U1VGSSEU68tSx/gCkOMrE8IP1phw9W8/iX7kP7Ua/e7ibcax9LIH2ZQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d97779fb-f40a-4445-ba77-ef2f0c90b6c1",
                            TwoFactorEnabled = false,
                            UserName = "VectorVortex",
                            CountryId = "CA",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "ba413c8e-bd92-4b67-ad4e-bd7ac0236013",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "164c1b06-ae33-45db-be0e-e67cad2bf7ef",
                            Email = "maddie49_54_3587@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "maddie49_54_3587@gmail.com",
                            NormalizedUserName = "fusionfalcon",
                            PasswordHash = "AQAAAAEAACcQAAAAEDr54hsVneMzqO+OIjKMsBk3CkUQkRQwxv6ZNVioHnb1aG6zO6sRyZjuDqG/3EgBQw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a0610166-091b-4d4f-920f-7bdd1936c50f",
                            TwoFactorEnabled = false,
                            UserName = "FusionFalcon",
                            CountryId = "GB",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "d8a49048-5ac1-4586-907d-baceecb14fed",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "90edc278-0cfb-4e6b-8fed-65e460816d4b",
                            Email = "blinkblink88@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "blinkblink88@hotmail.com",
                            NormalizedUserName = "vanguardvale",
                            PasswordHash = "AQAAAAEAACcQAAAAEHDcwPcEXRXJ/ZNPSjfwaliRSjMHWiYzgF3wts6BuBAvMHIzetgZNhIKhk76z0IWOw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "98c073cf-0cc4-4586-8ae7-146cd2204908",
                            TwoFactorEnabled = false,
                            UserName = "VanguardVale",
                            CountryId = "AU",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "95d90f10-67fa-418b-a16d-1a63bfeb970f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a3429542-c813-4fe9-96c6-aa6e30fcc12f",
                            Email = "quail_rjf93@pluto_mail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "quail_rjf93@pluto_mail.com",
                            NormalizedUserName = "quantumquill",
                            PasswordHash = "AQAAAAEAACcQAAAAENdZhDBOFkPyvDd5kNYhjBYzT4VnODIfsz0cWyp85mygvvrobQezd3J93sFPqjfbBg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a9e6fcf0-1c22-4ed4-8efa-07238237c2e0",
                            TwoFactorEnabled = false,
                            UserName = "QuantumQuill",
                            CountryId = "DE",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "4a99a16d-1096-44cb-96a3-053b56917bcf",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4c948b71-d561-42c8-9233-6cbb0258a6d1",
                            Email = "EclipseEmber@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "eclipseember@yahoo.com",
                            NormalizedUserName = "elysiumblimp",
                            PasswordHash = "AQAAAAEAACcQAAAAEGDrwqb7+3Jlou8OzSaNPshsA1s8sbPE06S8FuhOk94BYp/AqMsIeVJIK8fX1WVzlg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "695b2c37-3d13-42ae-a535-b5e3e6c1a06e",
                            TwoFactorEnabled = false,
                            UserName = "ElysiumBlimp",
                            CountryId = "FR",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "8cf89a46-bd09-4384-96c0-c1c654841bbb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "85028a15-86ad-4937-8cd4-7870fe57565a",
                            Email = "arthur_yikes@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "arthur_yikes@gmail.com",
                            NormalizedUserName = "archie99",
                            PasswordHash = "AQAAAAEAACcQAAAAEPRQzKVAOrzhzxNTip9ACwLuTR1XcMbnVrGHw/lzcclMCiNxFybsvsltLO74j9VO6A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "92723f63-f6c2-4423-9dac-480d02770a5c",
                            TwoFactorEnabled = false,
                            UserName = "Archie99",
                            CountryId = "JP",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "5a118590-c2ac-4064-aab1-abbad1cd6bce",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e6b23706-52f9-4622-b45c-a973e1bee406",
                            Email = "kim_lee_ayohasa@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "kim_lee_ayohasa@gmail.com",
                            NormalizedUserName = "kim",
                            PasswordHash = "AQAAAAEAACcQAAAAENm1RL9GSCICTY4oqGQA7TBGjjifNM/B1JCjtdwcH0ORZRW/xibg3TfS85wHgx1CQw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e7be453e-5457-4400-af38-d4abb03b715a",
                            TwoFactorEnabled = false,
                            UserName = "Kim",
                            CountryId = "JP",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "aaf47a62-e659-4d92-bab6-02a3dd812aeb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4340d8b5-7a34-407f-a434-3862d3fe25ea",
                            Email = "korean_language_center@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "korean_language_center@gmail.com",
                            NormalizedUserName = "sehee kim",
                            PasswordHash = "AQAAAAEAACcQAAAAEM0E28oKmuukOLc6ikPGg7YXsFWt4TB08rayVVBiebqcJhjfXJhGduVwhmsSG9pspg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "179566e0-b454-4c74-8b10-bbdace715281",
                            TwoFactorEnabled = false,
                            UserName = "Sehee Kim",
                            CountryId = "KR",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "6ebf8e6e-516b-463f-b996-dd327746e711",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b7e4c8ae-0e7f-4110-88fb-8877a404c103",
                            Email = "andreas_michaelson@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "andreas_michaelson@yahoo.com",
                            NormalizedUserName = "michaelson",
                            PasswordHash = "AQAAAAEAACcQAAAAEC8XXVcNDAj6d0Wy3E/WbSLK8PfbzXJhO99yuSMCQPiOy519YQLxiI+lr7cNUprYog==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "383d8de7-e823-4786-8017-600575d7b080",
                            TwoFactorEnabled = false,
                            UserName = "Michaelson",
                            CountryId = "BR",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "cb96d59c-bb9b-4128-b9d0-dc7c86f6419e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b2b7b8f2-ab05-478c-ae2d-927bf7c3e36d",
                            Email = "JackOutdoorAdventurer@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "jackoutdooradventurer@gmail.com",
                            NormalizedUserName = "jax",
                            PasswordHash = "AQAAAAEAACcQAAAAEAiGkf6PDMz2DrJ1N6A/wgDwCybd8myRVxO4pC52p5E0Po0k5sKxX2UtjF4+fyhXXQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dc1aa84c-e201-4919-9a01-86388ca4519b",
                            TwoFactorEnabled = false,
                            UserName = "Jax",
                            CountryId = "US",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "07b40a11-9941-4b21-a90a-605b11cdb487",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "daadac54-b890-4ece-a410-ee34a7e3d660",
                            Email = "katz_cakes@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "katz_cakes@gmail.com",
                            NormalizedUserName = "cocoagurl",
                            PasswordHash = "AQAAAAEAACcQAAAAEPaihd7np3pG8CfhRsdD2MNyk/YRf0qkF2p+0WB5JnMgXhvt0AL+o9Vp3wfVGyia2A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7f063318-71c4-4f38-9856-f1bdf0733263",
                            TwoFactorEnabled = false,
                            UserName = "CocoaGurl",
                            CountryId = "CA",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "7c61be63-6a12-4301-bd3b-cc50861735f0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ba2f8956-d60c-4847-aff6-86b2d413bccd",
                            Email = "lyric_freak_delRey@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "lyric_freak_delrey@gmail.com",
                            NormalizedUserName = "lea seydoux",
                            PasswordHash = "AQAAAAEAACcQAAAAEGeZW8pe0K8oXEzHBfQCHHR/k14/oCV+KDAgVVpE/YKU7B58MTe9ZTiOCLPj7z2ytg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5713bd0b-1846-4130-a285-bb4041b57476",
                            TwoFactorEnabled = false,
                            UserName = "Lea Seydoux",
                            CountryId = "GB",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "b3d890e0-11b6-417a-b7f7-41473235e3fc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c136507b-a39a-4014-aa6a-e14398c96da6",
                            Email = "lacrimus_maximus@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "lacrimus_maximus@hotmail.com",
                            NormalizedUserName = "lzzy83",
                            PasswordHash = "AQAAAAEAACcQAAAAEEdWq4EVZ4WlQE1T2kgvh8uPgWm0/zUxNg5Z71EHgK/9cZY5otBWIVOn39g0Go2fdg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5d324504-9dbe-48f7-8f16-5e3003670987",
                            TwoFactorEnabled = false,
                            UserName = "Lzzy83",
                            CountryId = "AU",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "4635c38a-41ec-42e1-9f67-9f8b3a7e3d80",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9f925856-b3c3-45d7-8610-3e75209fb6e2",
                            Email = "henrik_jakobsen@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "henrik_jakobsen@gmail.com",
                            NormalizedUserName = "henrik",
                            PasswordHash = "AQAAAAEAACcQAAAAEMra05952Kf5wUbGyat+OyS44yz4Mbefs5UKtKoBVvas2Yov50sZpAVmmcBo1deWFw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4196f7cc-bdd2-455f-a8e6-e0b62d77e5c3",
                            TwoFactorEnabled = false,
                            UserName = "Henrik",
                            CountryId = "DE",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "e4490d07-ba6d-467a-9dda-b9f9b0c3928e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3b39742e-9579-4629-bd94-7ff8550bbe64",
                            Email = "sally_su@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "sally_su@yahoo.com",
                            NormalizedUserName = "selenne levoux",
                            PasswordHash = "AQAAAAEAACcQAAAAEKg/uMJ1b7e7D17VnZ5HQwAbJmHHZpSoVcF8wfUgL5Sthc5sG2rPZMKWNz2TkOBd5A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ea1a4dda-72da-4e81-8cfb-1471ea9bf42d",
                            TwoFactorEnabled = false,
                            UserName = "Selenne Levoux",
                            CountryId = "FR",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "b0433d4e-d7df-4868-b831-a17f0a30af31",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "616f9842-374c-4280-ba31-a1ab17332a83",
                            Email = "尺の丂乇乃ﾚののﾶ丂@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "尺の丂乇乃ﾚののﾶ丂@gmail.com",
                            NormalizedUserName = "heylin",
                            PasswordHash = "AQAAAAEAACcQAAAAENWG3FAd9nkLRTdmefdas+28IhpRPfyOqNNW19XhC9Ki6altAgfl+fX7lsl1NdKVUw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "62049cb9-e31f-44d2-abec-f6b9e8691672",
                            TwoFactorEnabled = false,
                            UserName = "HeyLin",
                            CountryId = "JP",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "54c4d727-865e-438b-ab3f-339a689c5c19",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dcc633ad-ab00-488a-82f4-6ac347416444",
                            Email = "kiki_woods@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "kiki_woods@gmail.com",
                            NormalizedUserName = "kiki",
                            PasswordHash = "AQAAAAEAACcQAAAAEOBdbhkztaA3Yx1fRhGMlDoexiQPztBelPA5mTM8TwLHarfHOtDsBw/PTD+oK7JUSg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ec600039-1547-4d56-be0a-88ea3da03c58",
                            TwoFactorEnabled = false,
                            UserName = "Kiki",
                            CountryId = "PL",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        },
                        new
                        {
                            Id = "c6317ffc-2f72-40b3-acee-9a85dab1cd66",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1af1f5a1-92ec-469a-8d97-53b087e23c75",
                            Email = "black_swan@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "black_swan@gmail.com",
                            NormalizedUserName = "rapunzel",
                            PasswordHash = "AQAAAAEAACcQAAAAEB8wEBYivB5SQNBXGb5Fuxb/S2pP8EQ7yj9nW4SKwAbtzztTilZAWTQKm1Rrsnu1dg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "34bb4155-af48-4a8b-a159-13c06ddaa49d",
                            TwoFactorEnabled = false,
                            UserName = "Rapunzel",
                            CountryId = "BG",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonalInfo = ""
                        });
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.TextPost", b =>
                {
                    b.HasBaseType("EweForum.Infrastructure.Data.Models.Post");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("text");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.VideoPost", b =>
                {
                    b.HasBaseType("EweForum.Infrastructure.Data.Models.Post");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("video");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.ForumUserAttachment", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.FileAttachment", "FileAttachment")
                        .WithMany("ForumUsersFilesAttachments")
                        .HasForeignKey("FileAttachmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EweForum.Infrastructure.Data.Models.ForumUser", "ForumUser")
                        .WithMany("ForumUsersFilesAttachments")
                        .HasForeignKey("ForumUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FileAttachment");

                    b.Navigation("ForumUser");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.JoinedTopic", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.ForumUser", "ForumUser")
                        .WithMany("JoinedTopics")
                        .HasForeignKey("ForumUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EweForum.Infrastructure.Data.Models.Topic", "Topic")
                        .WithMany("JoinedTopics")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ForumUser");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Like", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EweForum.Infrastructure.Data.Models.ForumUser", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Post", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.ForumUser", "ForumUser")
                        .WithMany("Posts")
                        .HasForeignKey("ForumUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EweForum.Infrastructure.Data.Models.Topic", "Topic")
                        .WithMany("Posts")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ForumUser");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.PostAttachment", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.FileAttachment", "FileAttachment")
                        .WithMany("PostsAttachments")
                        .HasForeignKey("FileAttachmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EweForum.Infrastructure.Data.Models.Post", "Post")
                        .WithMany("PostsAttachments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FileAttachment");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.PostReply", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.Post", "Post")
                        .WithMany("PostsReplies")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EweForum.Infrastructure.Data.Models.ForumUser", "ForumUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ForumUser");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.ReplyClosure", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.PostReply", "Child")
                        .WithMany("Parents")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EweForum.Infrastructure.Data.Models.PostReply", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Topic", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.ForumUser", "ForumUser")
                        .WithMany("CreatedTopics")
                        .HasForeignKey("ForumUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ForumUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.ForumUser", b =>
                {
                    b.HasOne("EweForum.Infrastructure.Data.Models.Country", "Country")
                        .WithMany("ForumUsers")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Country", b =>
                {
                    b.Navigation("ForumUsers");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.FileAttachment", b =>
                {
                    b.Navigation("ForumUsersFilesAttachments");

                    b.Navigation("PostsAttachments");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Post", b =>
                {
                    b.Navigation("Likes");

                    b.Navigation("PostsAttachments");

                    b.Navigation("PostsReplies");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.PostReply", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Parents");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.Topic", b =>
                {
                    b.Navigation("JoinedTopics");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("EweForum.Infrastructure.Data.Models.ForumUser", b =>
                {
                    b.Navigation("CreatedTopics");

                    b.Navigation("ForumUsersFilesAttachments");

                    b.Navigation("JoinedTopics");

                    b.Navigation("Likes");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
