@model ViewPostModelDetails

<section>
	<div class="d-flex flex-column w-100 justify-content-center ">
		<div class="row">
               @switch (Model.PostType)
                {
                    case 0:
                        @await Component.InvokeAsync("ArticlePost",Model)
                        ;
                        break;
                    case 1:
                        @await Component.InvokeAsync("EventPost",Model)
                        ;
                        break;
                    case 2:
                        @await Component.InvokeAsync("VideoPost",Model)
                        ;
                        break;
                }
		</div>
        <div class="row mb-3 mt-3">
            @if (Model.Replies.Count == 0)
            {
                <h5 style="font-weight:400">No replies on this posts</h5>
            }else{
                <div class="card-collumns">
                    @foreach(var reply in Model.Replies)
                    {
                       <div class="mt-2 card  card-body p-3 w-50 comment-card">
                           @reply.Content
                           <div class="d-flex flex-sm-column mt-2 w-100">
                                    <span>Created on: @reply.CreatedOn</span>
                                    <span>By @reply.Username</span>
                                    <span class="parent text-black"><bold>Reply to this comment</bold></span>
                           </div>
                           <div class="d-flex flex-row-reverse">
                                <div class="w-100 d-block text-end text-black">
                                    <a href="@Url.Action("ViewReply","Post", new {
                                        postId = Model.Id,
                                        depth = (reply.Depth+1),
                                        parentId = reply.Id

                                    })">
                                        <bold>View Replies</bold>
                                    </a>
                                </div>
                            </div>
                            <div class="child">
                                @await Html.PartialAsync("_addReplyToComment", new ReplyToCommentViewModel{
                                        PostId = Model.Id,
                                        Depth = (reply.Depth+1),
                                        ParentId = reply.Id
                                    })
                            </div>
                                <div>
                            </div>
                       </div>
                    }
                </div>
            }
        </div>
        <div class="row">
            @await Html.PartialAsync("_AddReplyToPost", new ReplyViewModel{
                PostId = Model.Id,

            })
        </div>
    </div>
</section>