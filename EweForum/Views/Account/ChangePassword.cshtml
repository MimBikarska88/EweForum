@model ChangePasswordModel
@{
    ViewData["Title"] = "Change password";
}

<h3 class="text-center">@ViewData["Title"]</h3>

<div class="form-outer">
    <div class="form-inner">
        <div class="form-field">
                @await Component.InvokeAsync("SuccessMessage",new MessageModel{ SuccessMessage = Model.SuccessMessage})
                @await Component.InvokeAsync("ErrorMessage",new MessageModel{ ErrorMessage = Model.ErrorMessage})
        </div>
        <form id="change-password-form" method="post" asp-controller="Account" asp-action="ChangePassword">
            <div asp-validation-summary="ModelOnly" class="text-danger" ></div>
            <div class="form-field text-center">
                <input asp-for="@Model.Input.OldPassword" placeholder="old password" required class="form-input" aria-required="true" />
                <span asp-validation-for="@Model.Input.OldPassword" class="text-danger "></span>
            </div>
            <div class="form-field text-center">
                <input asp-for="@Model.Input.NewPassword" class="form-input" required  placeholder="new password"  aria-required="true" />
                <span asp-validation-for="@Model.Input.NewPassword"  class="text-danger  "></span>
            </div>
            <div class="form-field text-center">
                <input asp-for="@Model.Input.ConfirmPassword" class="form-input" required   placeholder="confirm new password " aria-required="true" />
                <span asp-validation-for="@Model.Input.ConfirmPassword"  class="text-danger"></span>
            </div>
            <div>
                  <button id="password-change-back-edit" class="form-button m-3">Go Back</button>
                  <button type="submit" class="form-button m-3 ">Update password</button>
            </div>
          
           
           
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}